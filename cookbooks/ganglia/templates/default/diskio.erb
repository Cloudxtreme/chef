#!/bin/bash

# Description: Startup script to monitor disk io and send to ganglia via gmetric
#
# chkconfig: 345 90 60
#

PIDFILE="/var/run/diskio.pid"
DISKS=`grep -E "\b[hsv]d[a-z]\b" /proc/diskstats  | awk '{print $3}'`
GDISK="/usr/bin/g_linux_disk"
LOCKFILE=/var/lock/diskio

success() {
  echo " [ OK ]"
}

if [ -f /etc/redhat-release ]; then
  . /etc/init.d/functions
  LOCKFILE=/var/lock/subsys/diskio
fi

start() {
	for disk in $DISKS; do 
		if [ -f "$PIDFILE" ]; then PID=`grep "${disk}:" $PIDFILE | awk -F ":" '{print $2}'`
		else PID=`ps aux | grep -E "$GDISK -s10 -i -o $disk\b" | grep -v "grep" | awk '{print $2}'`;fi

		if [ "$PID" ]; then 
		 	echo "$disk diskio check already running"
		else
			echo "starting: $GDISK -s10 -i -o $disk" && success
			$GDISK -s10 -i -o $disk
			P=`ps aux | grep -E "$GDISK -s10 -i -o $disk\b" | grep -v "grep" | awk '{print $2}'`
			echo "$disk:$P" >> $PIDFILE
		fi
	done
	touch $LOCKFILE
}

stop() {
        for disk in $DISKS; do
		PID=""
                if [ -f "$PIDFILE" ]; then PID=`grep "${disk}:" $PIDFILE | awk -F ":" '{print $2}'`
                else PID=`ps aux | grep -E "$GDISK -s10 -i -o $disk\b" | grep -v "grep" | awk '{print $2}'`; fi

                if [ "$PID" ]; then
                        echo "stopping: $GDISK -s10 -i -o $disk" && success
			kill $PID
                else
                        echo "$disk diskio check not running"
                fi
        done

        [ -f "$LOCKFILE" ] && /bin/rm $LOCKFILE
        [ -f "$PIDFILE" ] && /bin/rm "$PIDFILE" 
}

case "$1" in 
	start)
	start
	;;
	stop)
	stop
	;;
	*)
	echo "usage: $0 {start|stop}"
	exit 1
esac

exit $?
