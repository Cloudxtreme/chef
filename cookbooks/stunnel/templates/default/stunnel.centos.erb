#!/bin/bash
#
# chkconfig: 2345 99 99
# description: Secure Tunnel
# processname: stunnel

# Source function library 
. /etc/rc.d/init.d/functions

# Check that networking is up.
#
[ ${NETWORKING} ="yes" ] || exit 0

PIDFILE=/var/run/stunnel/stunnel.pid

# Path to the executable.
#
SEXE=/usr/sbin/stunnel

# Path to the configuration file.
#
CONF=/etc/stunnel/stunnel.conf

# Check the configuration file exists.
#
if [ ! -f $CONF ] ; then
	echo "The configuration file cannot be found!"
exit 0
fi

# Path to the lock file.
#
LOCK_FILE=/var/lock/subsys/stunnel

#====================================================================

#====================================================================
# Run controls:

prog=$"stunnel"

RETVAL=0

# Start stunnel as daemon.
#
isProcessRunning() {
  [ -f $PIDFILE ] && PID=$(cat $PIDFILE)
  
  if [ -n "$PID" ] && [ -d /proc/$PID ]; then
    return 0
  else
    if [ $(ps aux | grep stunnel|egrep -v "(grep|init.d/stunnel)"|wc -l) -ge 1 ]; then
      return 0
    else     
      return 1
    fi
  fi  
}

start() {
  isProcessRunning
  local status=$?

  if [ $status -eq 0 ]; then
    echo "stunnel is already running!"
    exit 0
  else
    echo -n $"Starting $prog: "
    $SEXE $CONF
  fi

  RETVAL=$?
  [ $RETVAL -eq 0 ] && success 
  echo
  [ $RETVAL -eq 0 ] && touch $LOCK_FILE
  return $RETVAL
}


# Stop stunnel.
#
stop() {
  isProcessRunning
  local status=$?

  if [ $?status -ne 0 ]; then
    echo "stunnel is not running!"
    exit 0
  else
    echo -n $"Shutting down $prog: "
    killproc -p $PIDFILE stunnel
    RETVAL=$?
    [ $RETVAL -eq 0 ] && success
    [ -f $LOCK_FILE ] && rm -f $LOCK_FILE
    echo
    return $RETVAL   
  fi
}

# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  condrestart)
    if [ -f $LOCK_FILE ]; then
      stop
      start
      RETVAL=$?
    fi
    ;;
  status)
    status -p $PIDFILE stunnel
    RETVAL=$?
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|condrestart|status}"
    RETVAL=1
esac

exit $RETVAL
